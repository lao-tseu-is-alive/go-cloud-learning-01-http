name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Label of the runner job
  build:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest
    # Service containers to run with `builder` job
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: make build

    - name: Create schema Postgres DB
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
        DB_NAME: todos
        DB_USER: todos
        DB_PASSWORD: todo_password
        PGPASSWORD: postgres
      run: psql -h localhost -p 5432 -d postgres -U postgres -f test/data/create_todos_schema.sql


    - name: Load data Postgres DB
      env:
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_NAME: todos
          DB_USER: todos
          DB_PASSWORD: todo_password
          PGPASSWORD: postgres
      run: psql -h localhost -p 5432 -d postgres -U postgres -f test/data/initial_todos_data.sql

    - name: Test
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres
        PGPASSWORD: postgres
        APP_DSN: postgres://127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?sslmode=disable&user=postgres&password=postgres
      run: make -e test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage-all.out
